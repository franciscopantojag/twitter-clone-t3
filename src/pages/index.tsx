import { SignInButton, useUser } from '@clerk/nextjs';
import type { GetServerSideProps, NextPage } from 'next';
import Head from 'next/head';
import CreatePostWizard from '~/components/CreatePostWizard';
import Feed from '~/components/Feed';
import { api } from '~/utils/api';
import { createServerSideHelpers } from '@trpc/react-query/server';
import { appRouter } from '~/server/api/root';
import superjson from 'superjson';
import { prisma } from '../server/db';

export const getServerSideProps: GetServerSideProps = async ({
  req: { url },
}) => {
  const ssg = createServerSideHelpers({
    router: appRouter,
    ctx: { prisma },
    transformer: superjson,
  });
  const isClientSideNavigation = !!url?.includes('_next/data');
  if (!isClientSideNavigation) await ssg.post.getAll.prefetch();

  return {
    props: {
      trpcState: ssg.dehydrate(),
    },
  };
};

const Home: NextPage = () => {
  const { isSignedIn, isLoaded: isUserLoaded } = useUser();
  api.post.getAll.useQuery();
  if (!isUserLoaded) return null;

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen justify-center">
        <div className="flex h-full w-full flex-col border-x border-slate-400 md:max-w-2xl">
          <div className="flex border-y border-slate-400 p-4">
            {isSignedIn && <CreatePostWizard />}
            {!isSignedIn && (
              <div className="flex justify-center">
                <SignInButton />
              </div>
            )}
          </div>
          <Feed />
        </div>
      </main>
    </>
  );
};

export default Home;
